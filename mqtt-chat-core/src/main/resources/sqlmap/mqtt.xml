<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mqtt">
    <resultMap id="resultSubscription" type="com.mium2.push.server.bean.Subscription">
        <result property="clientId" column="CLIENT_ID"/>
        <result property="topic" column="TOPIC"/>
        <result property="qos" column="QOS" javaType="int" jdbcType="INTEGER"/>
        <result property="activeYN" column="ACTIVY_YN"/>
        <result property="cleanSessionYN" column="CLEANSESSION_YN"/>
    </resultMap>

    <resultMap id="resultStorePublishEvent" type="com.mium2.push.server.bean.events.StoredPublishEvent">
        <result property="clientID" column="CLIENT_ID"/>
        <result property="topic" column="TOPIC"/>
        <result property="pub_qos" column="QOS" javaType="int" jdbcType="INTEGER"/>
        <result property="pub_message" column="MESSAGE"/>
        <result property="retainYN" column="RETAIN_YN"/>
        <result property="messageID" column="MSG_ID" javaType="int" jdbcType="INTEGER" />
    </resultMap>

    <parameterMap id="subscription" type="com.mium2.push.server.bean.Subscription"/>
    <parameterMap id="storePublishEvent" type="com.mium2.push.server.bean.events.StoredPublishEvent"/>
    <parameterMap id="publishEvent" type="com.mium2.push.server.bean.events.PublishEvent" />

    <select id="selClientID" parameterType="hashmap" resultType="hashmap">
      select A.CLIENT_ID, B.TOPIC from TB_MQTT_SUBSCRIPTION_USER A, TB_MQTT_SUBSCRIPTION B
      where A.CLIENT_ID=B.CLIENT_ID
      and A.CLIENT_ID=#{clientID}
    </select>

    <insert id="inSubscriptionUser" parameterType="java.lang.String">
        insert into TB_MQTT_SUBSCRIPTION_USER(CLIENT_ID) values(#{clientID})
    </insert>

    <update id="upSubscription" parameterMap="subscription">
        update TB_MQTT_SUBSCRIPTION set QOS=#{qos}, CLEANSESSION_YN=#{cleanSessionYN}, ACTIVY_YN=#{activeYN}
        where CLIENT_ID=#{clientId} and TOPIC=#{topic}
    </update>

    <insert id="inSubscription" parameterMap="subscription">
        insert into TB_MQTT_SUBSCRIPTION(CLIENT_ID,TOPIC,QOS,CLEANSESSION_YN,ACTIVY_YN) values(#{clientId},#{topic},#{qos},#{cleanSessionYN},#{activeYN})
    </insert>

    <insert id="inStoredMsg" parameterMap="storePublishEvent">
        insert into TB_MQTT_STOREDPUBLISHMSG(CLIENT_ID,TOPIC,QOS,MESSAGE,RETAIN_YN,MSG_ID) values(#{clientID},#{topic},#{pub_qos},#{pub_message},#{retainYN},#{messageID})
    </insert>

    <insert id="inPublishMsg" parameterMap="publishEvent">
        insert into TB_MQTT_PUBLISHMSG(MSG_ID,CLIENT_ID,TOPIC,QOS,MESSAGE,RETAIN_YN) values(#{messageID},#{clientID},#{topic},#{pub_qos},#{pub_message},#{retainYN})
    </insert>

    <delete id="delPublishMsg" parameterType="hashmap">
        delete TB_MQTT_PUBLISHMSG where CLIENT_ID=#{clientID} and MSG_ID=#{messageID}
    </delete>

    <select id="selAllSubscription" resultMap="resultSubscription">
        select CLIENT_ID, TOPIC, QOS, CLEANSESSION_YN, ACTIVY_YN from TB_MQTT_SUBSCRIPTION
    </select>

    <select id="getAllStoredPublishMsg" resultMap="resultStorePublishEvent">
        select CLIENT_ID , TOPIC, QOS, MESSAGE, RETAIN_YN, MSG_ID
        from TB_MQTT_STOREDPUBLISHMSG
    </select>

    <select id="getStoredPublishMsg" parameterType="java.lang.String" resultMap="resultStorePublishEvent">
      select CLIENT_ID , TOPIC, QOS, MESSAGE, RETAIN_YN, MSG_ID
      from TB_MQTT_STOREDPUBLISHMSG where CLIENT_ID=#{clientID}
    </select>


    <delete id="delStoredPublishMsg" parameterType="java.lang.String">
        delete from TB_MQTT_STOREDPUBLISHMSG where CLIENT_ID=#{clientID}
    </delete>

    <delete id="removeAllSubscription" parameterType="java.lang.String">
        delete from TB_MQTT_SUBSCRIPTION where CLIENT_ID=#{clientID}
    </delete>

</mapper>